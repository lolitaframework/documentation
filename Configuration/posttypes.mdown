PostTypes
===

The `PostTypes` config module helps you to register and manipulate WordPress custom post types.

How it works: ![Actions](images/posttypes.gif)

Default config path
---
`{{ Project Name }}/app/config/posttypes.json`

You can revrite this path by __lf\_config\_posttypes\_path__ filter.


Parameters
---
**$singular**
(string) (Required)  Name for one object of this post type. From this will be generated plural and slug.

**$plural**
(string) (Optional) Name for few object of this post type.

**label**
(string) (optional) A plural descriptive name for the post type marked for translation.
Default: Value of $labels['name']

**labels**
(array) (optional) labels - An array of labels for this post type. By default, post labels are used for non-hierarchical post types and page labels for hierarchical ones.
Default: if empty, 'name' is set to value of 'label', and 'singular_name' is set to value of 'name'.
'name' - general name for the post type, usually plural. The same and overridden by $post_type_object->label. Default is Posts/Pages

* 'singular_name' - name for one object of this post type. Default is Post/Page
* 'add_new' - the add new text. The default is "Add New" for both hierarchical and non-hierarchical post types. When internationalizing this string, please use a gettext context matching your post type. Example: _x('Add New', 'product');
* 'add_new_item' - Default is Add New Post/Add New Page.
* 'edit_item' - Default is Edit Post/Edit Page.
* 'new_item' - Default is New Post/New Page.
* 'view_item' - Default is View Post/View Page.
* 'search_items' - Default is Search Posts/Search Pages.
* 'not_found' - Default is No posts found/No pages found.
* 'not_found_in_trash' - Default is No posts found in Trash/No pages found in Trash.
* 'parent_item_colon' - This string isn't used on non-hierarchical types. In hierarchical ones the default is 'Parent Page:'.
* 'all_items' - String for the submenu. Default is All Posts/All Pages.
* 'archives' - String for use with archives in nav menus. Default is Post Archives/Page Archives.
* 'insert_into_item' - String for the media frame button. Default is Insert into post/Insert into page.
* 'uploaded_to_this_item' - String for the media frame filter. Default is Uploaded to this post/Uploaded to this page.
* 'featured_image' - Default is Featured Image.
* 'set_featured_image' - Default is Set featured image.
* 'remove_featured_image' - Default is Remove featured image.
* 'use_featured_image' - Default is Use as featured image.
* 'menu_name' - Default is the same as `name`.
* 'filter_items_list' - String for the table views hidden heading.
* 'items_list_navigation' - String for the table pagination hidden heading.
* 'items_list' - String for the table hidden heading.
* 'name_admin_bar' - String for use in New in Admin menu bar. Default is the same as `singular_name`.

**description**
(string) (optional) A short descriptive summary of what the post type is.
Default: blank

**public**
(boolean) (optional) Controls how the type is visible to authors (show_in_nav_menus, show_ui) and readers (exclude_from_search, publicly_queryable).
Default: false

* 'true' - Implies exclude_from_search: false, publicly_queryable: true, show_in_nav_menus: true, and show_ui:true. The built-in types attachment, page, and post are similar to this.
* 'false' - Implies exclude_from_search: true, publicly_queryable: false, show_in_nav_menus: false, and show_ui: false. The built-in types nav_menu_item and revision are similar to this. Best used if you'll provide your own editing and viewing interfaces (or none at all).

**exclude_from_search**
(boolean) (importance) Whether to exclude posts with this post type from front end search results.
Default: value of the opposite of public argument

* 'true' - site/?s=search-term will not include posts of this post type.
* 'false' - site/?s=search-term will include posts of this post type.

**Note:** If you want to show the posts's list that are associated to taxonomy's terms, you must set exclude_from_search to false (ie : for call site_domaine/?taxonomy_slug=term_slug or site_domaine/taxonomy_slug/term_slug). If you set to true, on the taxonomy page (ex: taxonomy.php) WordPress will not find your posts and/or pagination will make 404 error...


**publicly_queryable**
(boolean) (optional) Whether queries can be performed on the front end as part of parse_request().
Default: value of public argument

**Note:** The queries affected include the following (also initiated when rewrites are handled)

* ?post_type={post_type_key}
* ?{post_type_key}={single_post_slug}
* ?{post_type_query_var}={single_post_slug}

**Note:** If query_var is empty, null, or a boolean FALSE, WordPress will still attempt to interpret it (4.2.2) and previews/views of your custom post will return 404s.

**show_ui**
(boolean) (optional) Whether to generate a default UI for managing this post type in the admin.
Default: value of public argument

* 'false' - do not display a user-interface for this post type
* 'true' - display a user-interface (admin panel) for this post type

**Note:** _built-in post types, such as post and page, are intentionally set to false.

**show\_in\_nav\_menus**
(boolean) (optional) Whether post_type is available for selection in navigation menus.
Default: value of public argument

[Link to native documentation](https://codex.wordpress.org/Function_Reference/register_post_type)