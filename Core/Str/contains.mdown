\MyProject\LolitaFramework\Core\Str::contains
===

Determine if a given string contains a given substring.

As i mentioned before the second parameter can be a string or an array of strings. In case it is a string the method returns true or false accordingly by searching in a case-sensitive manner. In case we pass an array of strings then the method returns true as long as it has at least one match no matter how many strings the $needles array contains. So in our third example the method returned true because there was 1 match while for in fourth example returned false because of 0 matches.

Example usage
---
```php

$str = 'Laravel is really awesome';

$result = Str::contains($str, 'Laravel');

// true
```
```php

$str = 'Laravel is really awesome';

$result = Str::contains($str, ['Laravel', 'is']);

// true

```
```php

$str = 'Laravel is really awesome';

$result = Str::contains($str, ['laravel', 'is']);

// true

```
```php

$str = 'Laravel is really awesome';

$result = Str::contains($str, ['laravel', 'his']);

// false

```

Parameters
---

_string_  __$haystack__ String.

_string|array_  __$needles__ The second parameter named $needles can be a string or an array of strings.

Return Value
---
__bool__
